version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.1.0
  aws-ecs: circleci/aws-ecs@0.0.8
  aws-s3: circleci/aws-s3@1.0.11
jobs:
  sh-s3-upload:
    docker:
      - image: 'circleci/python:2.7'
    steps:
      - checkout
      - aws-s3/copy:
          from: ./project/myjob.sh
          to: 's3://circleci-fetch-test99/myjob.sh'
workflows:
  build-and-deploy:
    jobs:
      - aws-ecr/build-and-push-image:
          repo: $AWS_RESOURCE_NAME_PREFIX
          tag: ${CIRCLE_SHA1}
          # create-repo: true
          # dockerfile: Dockerfile
      - sh-s3-upload:
          name: sh-s3-upload
          requires:
            - aws-ecr/build-and-push-image
      - aws-ecs/deploy-service-update:
          requires:
            - sh-s3-upload
          aws-region: ${AWS_DEFAULT_REGION}
          family: "${AWS_RESOURCE_NAME_PREFIX}-service"
          cluster-name: "${AWS_RESOURCE_NAME_PREFIX}-cluster"
          container-image-name-updates: "container=${AWS_RESOURCE_NAME_PREFIX}-service,image-and-tag=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX}:${CIRCLE_SHA1}"
          verify-revision-is-deployed: true
          post-steps:
            - run:
                name: Test the deployment
                command: |
                  TARGET_GROUP_ARN=$(aws ecs describe-services --cluster ${AWS_RESOURCE_NAME_PREFIX}-cluster --services ${AWS_RESOURCE_NAME_PREFIX}-service | jq -r '.services[0].loadBalancers[0].targetGroupArn')
                  ELB_ARN=$(aws elbv2 describe-target-groups --target-group-arns $TARGET_GROUP_ARN | jq -r '.TargetGroups[0].LoadBalancerArns[0]')
                  ELB_DNS_NAME=$(aws elbv2 describe-load-balancers --load-balancer-arns $ELB_ARN | jq -r '.LoadBalancers[0].DNSName')
                  curl -s --retry 10 http://$ELB_DNS_NAME | grep "Welcome to nginx!"